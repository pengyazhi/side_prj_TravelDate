@model prj_Traveldate_Core.Models.MyModels.COrderState
@{
    ViewData["Title"] = "List";
}

<!-- Page Wrapper -->
<div id="wrapper">

    <!-- Sidebar -->
    <ul class="navbar-nav bg-gradient-primary sidebar sidebar-dark accordion" id="accordionSidebar">

        <!-- Sidebar - Brand -->
        <div class="sidebar-brand d-flex align-items-center justify-content-center">
            <div class="sidebar-brand-icon">
                <img src="~/icons/navigation.png" class="icon" id="sidebarToggleTop" />
            </div>
            <div class="sidebar-brand-text mx-3 nav-menu">主選單</div>
        </div>

        <!-- Divider -->
        <hr class="sidebar-divider my-0">

        <!-- Nav Item - Dashboard -->
        <li class="nav-item">
            <a class="nav-link" href="~/Dashboard/List">
                <img src="~/icons/home.png" class="subicon" />
                <span>首頁</span>
            </a>
        </li>

        <!-- Divider -->
        <hr class="sidebar-divider">

        <!-- Nav Item - Pages Collapse Menu -->
        <li class="nav-item">
            <a class="nav-link collapsed" href="#" data-toggle="collapse" data-target="#collapseCompany"
               aria-expanded="true" aria-controls="collapseCompany">
                <img src="~/icons/company.png" class="subicon" />
                <span>旅行社專區</span>
            </a>
            <div id="collapseCompany" class="collapse" aria-labelledby="headingTwo" data-parent="#accordionSidebar">
                <div class="bg-white py-2 collapse-inner rounded">
                    <a class="collapse-item" href="~/Company/Edit">帳號管理</a>
                    <a class="collapse-item" href="~/Company/Password">更改密碼</a>
                </div>
            </div>
        </li>
        <!-- Divider -->
        <hr class="sidebar-divider">
        <!-- Nav Item - Utilities Collapse Menu -->
        <li class="nav-item">
            <a class="nav-link collapsed" href="#" data-toggle="collapse" data-target="#collapseUtilities"
               aria-expanded="true" aria-controls="collapseUtilities">
                <img src="~/icons/edit.png" class="subicon" />
                <span>產品管理</span>
            </a>
            <div id="collapseUtilities" class="collapse" aria-labelledby="headingUtilities"
                 data-parent="#accordionSidebar">
                <div class="bg-white py-2 collapse-inner rounded">
                    <a class="collapse-item" href="~/Product/List">產品列表</a>
                    <a class="collapse-item" href="~/Product/Create">新增產品</a>
                    <a class="collapse-item" href="~/Trip/List">出團日期</a>
                </div>
            </div>
        </li>
        <li class="nav-item">
            <a class="nav-link collapsed" href="#" data-toggle="collapse" data-target="#collapseAnalyze"
               aria-expanded="true" aria-controls="collapseAnalyze">
                <img src="~/icons/company.png" class="subicon" />
                <span>數據分析</span>
            </a>
            <div id="collapseAnalyze" class="collapse" aria-labelledby="headingTwo" data-parent="#accordionSidebar">
                <div class="bg-white py-2 collapse-inner rounded">
                    <a class="collapse-item" href="~/Analysis/SellAnalysis">銷售分析</a>
                </div>
            </div>
        </li>

    </ul>
    <!-- End of Sidebar -->
    <!-- Content Wrapper -->
    <div id="content-wrapper" class="d-flex flex-column">

        <!-- Main Content -->
        <div id="content">

            <!-- Begin Page Content -->
            
            <div class="container-fluid">
                <h2>首頁</h2>
                <div class="row">
                    
                        <!-- Earnings (Monthly) Card Example -->
                        <div class="col-xl-3 col-md-6 mb-4">
                            <div class="card border-left-primary shadow h-100 py-2">
                                <div class="card-body">
                                    <div class="row no-gutters align-items-center">
                                        <div class="col mr-2">
                                        <div class="font-weight-bold text-primary text-uppercase mb-1 cardTitle">
                                                訂單數量
                                            </div>
                                        
                                          </div>
                                        <div class="col-auto">
                                            <i class="fas fa-calendar fa-2x text-gray-300"></i>
                                        </div>
                                    <div class="h2 mb-0 font-weight-bold text-gray-800 cardContent text-right align-items-end"> @Html.DisplayFor(modelItem => modelItem.orderQuantity)</div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Earnings (Monthly) Card Example -->
                        <div class="col-xl-3 col-md-6 mb-4">
                            <div class="card border-left-success shadow h-100 py-2">
                                <div class="card-body">
                                <div class="row no-gutters align-items-center" style="display:flex;">
                                        <div class="col mr-2">
                                        <div class=" font-weight-bold text-success text-uppercase mb-1 cardTitle">
                                                訂單總價
                                            </div>
                                            
                                        </div>
                                        <div class="col-auto">
                                            <i class="fas fa-dollar-sign fa-2x text-gray-300"></i>
                                        </div>
                                    <div class="h2 mb-0 font-weight-bold text-gray-800 cardContent text-right">@Html.DisplayFor(modelItem => modelItem.turnover)</div>
                                    </div>
                                </div>
                            </div>
                        </div>

                    
                    
                        <!-- Earnings (Monthly) Card Example -->
                        <div class="col-xl-6 col-md-6 mb-4">
                            <div class="card border-left-info shadow h-100 py-2">
                                <div class="card-body">
                                    <div class="row no-gutters align-items-center">
                                        <div class="col mr-2">
                                        <div class=" font-weight-bold text-success text-uppercase mb-1 cardTitle">
                                                熱銷前三
                                            </div>
                                            @foreach (string p in Model.top3product)
                                            {
                                                <div class="h5 mb-0 font-weight-bold text-gray-800 cardContent">@p</div>
                                                <hr />
                                            }
                                        </div>
                                        <div class="col-auto">
                                            <i class="fas fa-dollar-sign fa-2x text-gray-300"></i>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                    
                
                
                    
                </div>
                <div class="row">
                    <div class="col-lg-6">
                        <div class="card shadow mb-4">
                            <div class="card-header py-3">
                                <h6 class="m-0 font-weight-bold text-primary cardTitle">搜尋</h6>
                            </div>
                            <div class="card-body">
                              
                                <div>
                                    <label>產品類型</label>
                                    <div>
                                    @* <select id="selecttype" class="form-select">
                                        @foreach (ProductTypeList type in Model.types)
                                        {
                                            <option  value="@type.ProductTypeId">@type.ProductType</option>
                                        }
                                    </select> *@
                                        @{
                                            int i = 0;
                                            foreach (ProductTypeList type in Model.types)
                                    {
                                                                <input class="typeradio" type="radio" value="@type.ProductTypeId" name="type" id="typeradio @i" />
                                                                <label for="typeradio @i" class="control-label">@type.ProductType</label>
                                                i++;
                                            }
                                        }
                                    </div>
                                    <label>日期範圍</label>
                                    <input type="text" id="dashboardcalendar" class="form-control" />
                                    
                                </div>

                            </div>
                        </div>
                    </div>
                </div>
                       <div class="row">
                           <div class="col-lg-12">
                <div class="card shadow mb-4">
        <div class="card-header py-3">
                            <h6 class="m-0 font-weight-bold text-primary cardTitle cardTitle">訂單概況</h6>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                            <table class="display" id="dataTable" width="100%" cellspacing="0">
                    <thead>
                        <tr>
                            <th>產品日期</th>
                            <th>產品類型</th>
                            <th>訂購會員Email</th>
                            <th>產品名稱</th>
                             <th>
                                                    <div>報名人數/</div>
                                                    <div>人數上限</div>
                            </th>
                        </tr>
                    </thead>
                    
                    <tbody id="dashboard">
                       
                        @foreach (var item in Model.ProductDetail) {
                                <tr>
                                    <td>
                                                <div> @Html.DisplayFor(modelItem => item.productDate)</div>
                                         </td>
                                     <td>
                                                <div> @Html.DisplayFor(modelItem => item.productType) </div>
                                     </td>
                                    <td>
                                        <div>@Html.DisplayFor(modelItem => item.Email) </div>
                                        
                                    </td>
                                    <td>
                                        <div>@Html.DisplayFor(modelItem => item.productName)</div>
                                    </td>
                                    <td>
                                                        @{
                                                            string[] stockcount = item.stock.Split("/");
                                                            if ((Convert.ToDouble(stockcount[0]) / Convert.ToDouble(stockcount[1])) < 0.5)
                                                            {
                                                                                <div class="btn btn-outline-success"> @Html.DisplayFor(modelItem => item.stock)</div>
                                                            }
                                                            else if ((Convert.ToDouble(stockcount[0]) / Convert.ToDouble(stockcount[1])) < 1)
                                                            {
                                                                                <div class="btn btn-outline-warning"> @Html.DisplayFor(modelItem => item.stock)</div>
                                                            }
                                                            else
                                                            {
                                                                                <div class="btn btn-outline-danger"> @Html.DisplayFor(modelItem => item.stock)</div>
                                                            }
                                                        }
                                        
                                    </td>
                                     
                                </tr>
                            }

                    </tbody>
                </table>
            </div>
        </div>
    </div>
                    </div>
                </div>


            </div>
            <!-- /.container-fluid -->

          </div>
        <!-- End of Main Content -->


    </div>
    <!-- End of Content Wrapper -->

</div>
<!-- End of Page Wrapper -->
@section Styles{
    <link rel="stylesheet" href="https://cdn.datatables.net/1.13.6/css/jquery.dataTables.min.css" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css" />
    <style>
        .card-body {
            height: unset;
        }

        .cardTitle {
            font-size: 25px;
        }
    </style>

}
@section Scripts{
    <script src="https://cdn.datatables.net/1.13.6/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>
    <script> 
        // new DataTable('#dataTable');
        $(document).ready(function () {
            $('#dataTable').DataTable({
                order: [[2, 'desc']],
                'language': {
                    "processing": "處理中...",
                    "loadingRecords": "載入中...",
                    "paginate": {
                        "first": "第一頁",
                        "previous": "上一頁",
                        "next": "下一頁",
                        "last": "最後一頁"
                    },
                    "emptyTable": "目前沒有資料",
                    "datetime": {
                        "previous": "上一頁",
                        "next": "下一頁",
                        "hours": "時",
                        "minutes": "分",
                        "seconds": "秒",
                        "amPm": [
                            "上午",
                            "下午"
                        ],
                        "unknown": "未知",
                        "weekdays": [
                            "週日",
                            "週一",
                            "週二",
                            "週三",
                            "週四",
                            "週五",
                            "週六"
                        ],
                        "months": [
                            "一月",
                            "二月",
                            "三月",
                            "四月",
                            "五月",
                            "六月",
                            "七月",
                            "八月",
                            "九月",
                            "十月",
                            "十一月",
                            "十二月"
                        ]
                    },
                    "searchBuilder": {
                        "add": "新增條件",
                        "condition": "條件",
                        "deleteTitle": "刪除過濾條件",
                        "button": {
                            "_": "複合查詢 (%d)",
                            "0": "複合查詢"
                        },
                        "clearAll": "清空",
                        "conditions": {
                            "array": {
                                "contains": "含有",
                                "equals": "等於",
                                "empty": "空值",
                                "not": "不等於",
                                "notEmpty": "非空值",
                                "without": "不含"
                            },
                            "date": {
                                "after": "大於",
                                "before": "小於",
                                "between": "在其中",
                                "empty": "為空",
                                "equals": "等於",
                                "not": "不為",
                                "notBetween": "不在其中",
                                "notEmpty": "不為空"
                            },
                            "number": {
                                "between": "在其中",
                                "empty": "為空",
                                "equals": "等於",
                                "gt": "大於",
                                "gte": "大於等於",
                                "lt": "小於",
                                "lte": "小於等於",
                                "not": "不為",
                                "notBetween": "不在其中",
                                "notEmpty": "不為空"
                            },
                            "string": {
                                "contains": "含有",
                                "empty": "為空",
                                "endsWith": "字尾為",
                                "equals": "等於",
                                "not": "不為",
                                "notEmpty": "不為空",
                                "startsWith": "字首為",
                                "notContains": "不含",
                                "notStartsWith": "開頭不是",
                                "notEndsWith": "結尾不是"
                            }
                        },
                        "data": "欄位",
                        "leftTitle": "群組條件",
                        "logicAnd": "且",
                        "logicOr": "或",
                        "rightTitle": "取消群組",
                        "title": {
                            "_": "複合查詢 (%d)",
                            "0": "複合查詢"
                        },
                        "value": "內容"
                    },
                    "editor": {
                        "close": "關閉",
                        "create": {
                            "button": "新增",
                            "title": "新增資料",
                            "submit": "送出新增"
                        },
                        "remove": {
                            "button": "刪除",
                            "title": "刪除資料",
                            "submit": "送出刪除",
                            "confirm": {
                                "_": "您確定要刪除您所選取的 %d 筆資料嗎？",
                                "1": "您確定要刪除您所選取的 1 筆資料嗎？"
                            }
                        },
                        "error": {
                            "system": "系統發生錯誤(更多資訊)"
                        },
                        "edit": {
                            "button": "修改",
                            "title": "修改資料",
                            "submit": "送出修改"
                        },
                        "multi": {
                            "title": "多重值",
                            "info": "您所選擇的多筆資料中，此欄位包含了不同的值。若您想要將它們都改為同一個值，可以在此輸入，要不然它們會保留各自原本的值。",
                            "restore": "復原",
                            "noMulti": "此輸入欄需單獨輸入，不容許多筆資料一起修改"
                        }
                    },
                    "autoFill": {
                        "cancel": "取消"
                    },
                    "buttons": {
                        "copySuccess": {
                            "_": "複製了 %d 筆資料",
                            "1": "複製了 1 筆資料"
                        },
                        "copyTitle": "已經複製到剪貼簿",
                        "excel": "Excel",
                        "pdf": "PDF",
                        "print": "列印",
                        "copy": "複製",
                        "colvis": "欄位顯示",
                        "colvisRestore": "重置欄位顯示",
                        "csv": "CSV",
                        "pageLength": {
                            "-1": "顯示全部",
                            "_": "顯示 %d 筆"
                        },
                        "createState": "建立狀態",
                        "removeAllStates": "移除所有狀態",
                        "removeState": "移除",
                        "renameState": "重新命名",
                        "savedStates": "儲存狀態",
                        "stateRestore": "狀態 %d",
                        "updateState": "更新"
                    },
                    "searchPanes": {
                        "collapse": {
                            "_": "搜尋面版 (%d)",
                            "0": "搜尋面版"
                        },
                        "emptyPanes": "沒搜尋面版",
                        "loadMessage": "載入搜尋面版中...",
                        "clearMessage": "清空",
                        "count": "{total}",
                        "countFiltered": "{shown} ({total})",
                        "title": "過濾條件 - %d",
                        "showMessage": "顯示全部",
                        "collapseMessage": "摺疊全部"
                    },
                    "stateRestore": {
                        "emptyError": "名稱不能空白。",
                        "creationModal": {
                            "button": "建立",
                            "columns": {
                                "search": "欄位搜尋",
                                "visible": "欄位顯示"
                            },
                            "name": "名稱：",
                            "order": "排序",
                            "paging": "分頁",
                            "scroller": "卷軸位置",
                            "search": "搜尋",
                            "searchBuilder": "複合查詢",
                            "select": "選擇",
                            "title": "建立新狀態",
                            "toggleLabel": "包含："
                        },
                        "duplicateError": "此狀態名稱已經存在。",
                        "emptyStates": "名稱不可空白。",
                        "removeConfirm": "確定要移除 %s 嗎？",
                        "removeError": "移除狀態失敗。",
                        "removeJoiner": "和",
                        "removeSubmit": "移除",
                        "removeTitle": "移除狀態",
                        "renameButton": "重新命名",
                        "renameLabel": "%s 的新名稱：",
                        "renameTitle": "重新命名狀態"
                    },
                    "select": {
                        "columns": {
                            "_": "選擇了 %d 欄資料",
                            "1": "選擇了 1 欄資料"
                        },
                        "rows": {
                            "1": "選擇了 1 筆資料",
                            "_": "選擇了 %d 筆資料"
                        },
                        "cells": {
                            "1": "選擇了 1 格資料",
                            "_": "選擇了 %d 格資料"
                        }
                    },
                    "zeroRecords": "沒有符合的資料",
                    "aria": {
                        "sortAscending": "：升冪排列",
                        "sortDescending": "：降冪排列"
                    },
                    "info": "顯示第 _START_ 至 _END_ 筆結果，共 _TOTAL_ 筆",
                    "infoEmpty": "顯示第 0 至 0 筆結果，共 0 筆",
                    "infoFiltered": "(從 _MAX_ 筆結果中過濾)",
                    "infoThousands": ",",
                    "lengthMenu": "顯示 _MENU_ 筆結果",
                    "search": "搜一搜：",
                    "searchPlaceholder": "請輸入關鍵字",
                    "thousands": ","
                }
            });

        });
        
    $('#dashboardcalendar').flatpickr({
            mode: "range",
            dateFormat: "Y-m-d"
         });
    </script>
    <script>
               
        async function queryByType(typeID) {
            const dashboard = document.getElementById('dashboard');
            const response = await fetch(`@Url.Content("~/Dashboard/queryByType")?typeID=${typeID}`);
            const datas = await response.json();
            if (datas != null) 
            {
                const rows = datas.map(row => {
                    const { productName, productDate, email, stock, productType } = row
                    if (eval(stock) < 0.5) {
                        return (
                            ` <tr>
                                                                      <td>${productDate}</td>
                                                                       <td>${productType}</td>
                                                                <td>${email}</td>
                                                                        <td>${productName}</td>
                                                                  <td> <div class="btn btn-outline-success"> ${stock} </div></td>
                                         </tr>`
                        )
                    }
                    else if (eval(stock) < 1) {
                        return (
                            ` <tr>
                                                                              <td>${productDate}</td>
                                                                               <td>${productType}</td>
                                                                        <td>${email}</td>
                                                                                <td>${productName}</td>
                                                                          <td><div class="btn btn-outline-warning"> ${stock}</div></td>
                                                 </tr>`
                        )

                    }
                    else {
                        return (
                            ` <tr>
                                                                                      <td>${productDate}</td>
                                                                                       <td>${productType}</td>
                                                                                <td>${email}</td>
                                                                                        <td>${productName}</td>
                                                                                 <td><div class="btn btn-outline-danger"> ${stock}</td>
                                                         </tr>`
                        )
                    }

                })
                dashboard.innerHTML = rows.join("");
            }
        }

        async function queryByDate(dates) {
            const dashboard = document.getElementById('dashboard');
            const response = await fetch(`@Url.Content("~/Dashboard/queryByDate")?dates=${dates}`);
            const datas = await response.json();
            if (datas != null) {
                const rows = datas.map(row => {
                    const { productName, productDate, email, stock, productType } = row
                    if (eval(stock)<0.5){
                     return (
                        ` <tr>
                                                              <td>${productDate}</td>
                                                               <td>${productType}</td>
                                                        <td>${email}</td>
                                                                <td>${productName}</td>
                                                          <td> <div class="btn btn-outline-success"> ${stock} </div></td>
                                 </tr>`
                    )
                    }
                   else if (eval(stock) < 1){
                        return (
                            ` <tr>
                                                                      <td>${productDate}</td>
                                                                       <td>${productType}</td>
                                                                <td>${email}</td>
                                                                        <td>${productName}</td>
                                                                  <td><div class="btn btn-outline-warning"> ${stock}</div></td>
                                         </tr>`
                        )

                   }
                   else{
                        return (
                            ` <tr>
                                                                              <td>${productDate}</td>
                                                                               <td>${productType}</td>
                                                                        <td>${email}</td>
                                                                                <td>${productName}</td>
                                                                         <td><div class="btn btn-outline-danger"> ${stock}</td>
                                                 </tr>`
                        )
                   }

                })
                dashboard.innerHTML = rows.join("");
            }
        }

        $('.typeradio').change(function () {
            var typeID = $(this).val();
            queryByType(typeID);
        });

        var inputValue = ""; // 用于存储输入的值
        var changeCount = 0; // 用于计数值改变的次数

        $('#dashboardcalendar').change(function () {

            var currentInputValue = $(this).val();

            // 检查当前值是否与之前的值不同
            if (currentInputValue !== inputValue) {
                changeCount++; // 值改变次数加1
                inputValue = currentInputValue; // 更新存储的值

                // 当值改变两次时触发事件
                if (changeCount === 2) {
                    var dates = $(this).val();
                    queryByDate(dates);

                    // 在这里执行其他操作，根据输入的值进行不同的处理

                    // 重置计数器，以便下一次触发事件
                    changeCount = 0;
                }
            }
            
            
        });


    </script>
}

