
@{
    ViewData["Title"] = "ProductPreview";
}

<nav class="navbar navbar-expand-md fixed-top" style="display:none; background-color:#FCFCFC;box-shadow:0 2px 4px rgba(0, 0, 0, 0.8);">
    <div class="container">
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarNav">
            <ul class="navbar-nav">
                <li class="nav-item">
                    <a class="nav-link" href="#section1" style="color:#155074;">商品詳細說明</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="#section2" style="color:#155074">行程說明</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="#section3" style="color:#155074">體驗地點</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="#section4" style="color:#155074">旅客評價</a>
                </li>
                <li class="nav-item">
                    <a href="#booking-section" class="btn my-btn-primary" style="width:100%;margin-left:250px;font-size: 16px;">立即預訂</a>
                </li>
            </ul>
        </div>
    </div>
</nav>

<button type="button" id="BackTop" class="toTop-arrow"></button>
<div class="product-detail">
    <div>
        <div class="protag">
            <span>台灣 > @Model.city.City > @Model.product.ProductName</span>
        </div>
    </div>

    <!--ProductPhoto-->
    <div class="outer-wrappers">
        <div class="outer-wrapper col-10 mb-3">
            <div class="s-wrap s-type-1" role="slider">
                @if (Model.program.fPhotoPath != null)
                {
                    int photoCount = Model.program.fPhotoPath.Count;
                    for (int i = 1; i <= photoCount; i++)
                    {
                        <input type="radio" id="@("s-" + i)" name="slider-control" @(i == 1 ? "checked=\"checked\"" : "")>
                    }
                }

                <ul class="s-content">
                    @if (Model.program.fPhotoPath != null)
                    {
                        int index = 1;
                        foreach (var photoBytes in Model.program.fPhotoPath)
                        {
                            <li class="s-item s-item-@index">
                                
                                @*<img src="~/images/@photoBytes" alt="Product Image" />*@
                                <img src="data:image/jpeg;base64,@photoBytes" alt="Uploaded Image" />
                            </li>
                            index++;
                        }
                    }
                </ul>

                <div class="s-control">
                    @if (Model.program.fPhotoPath != null)
                    {
                        int photoCount = Model.program.fPhotoPath.Count;
                        for (int i = 1; i <= photoCount; i++)
                        {
                            <label class="s-c-@i" for="@("s-" + i)"></label>
                        }
                    }
                </div>

                <div class="s-nav">
                    <label class="s-nav-1 left" for="s-1"></label>
                    <label class="s-nav-1 right" for="s-2"></label>
                    <label class="s-nav-2 left" for="s-1"></label>
                    <label class="s-nav-2 right" for="s-3"></label>
                    <label class="s-nav-3 left" for="s-2"></label>
                    <label class="s-nav-3 right" for="s-4"></label>
                    <label class="s-nav-4 left" for="s-3"></label>
                    <label class="s-nav-4 right" for="s-5"></label>
                    <label class="s-nav-5 left" for="s-4"></label>
                </div>
            </div>
        </div>
    </div>

    <!--Productname-->
    <div class="mt-2">
        <h3>@Model.product.ProductName</h3>
    </div>


    <!--Outline、立即預定-->
    <div class="plancal-container mb-3">
        <div class="product-description">
            <ul>
                <li style="list-style-image: url('/icons/icons8-tag-16.png');">
                    <div style="display:flex;align-items:center;">
                        @foreach (var tags in Model.program.fProdTags)
                        {
                            <p class="bg-gradient-info rounded p-1 text-white fw-bolder" style="color:#6C6C6C; margin-right:5px; margin-bottom:0px !important;">#@tags </p>
                        }
                    </div>
                </li>

                @foreach (var detail in Model.program.fOutline)
                {
                    if (!string.IsNullOrEmpty(detail))  //加個判斷避免顯示時多出空行
                    {
                        <li>@detail</li>
                    }
                }
            </ul>
        </div>
        <div class="card m-auto" style="width: 35%; /*box-shadow:8px 8px 3px rgba(0, 0, 0, 0.5);*/">
            <div class="card-body" style="width:80%; margin:5px auto;">
                <div class="price-container" style="display: flex; align-items: center;">
                    <span>TWD</span>
                    @*<span>@Model.program.fTripPrice</span>*@
                    <span>起</span>
                    @* <a asp-controller="Program" asp-action="AddToFavo" name="pdid" >
                        <img src="/icons/icons8-like-48 (1).png" class="CartIconbtn cartUnlike" style="width:32px; margin-bottom:2px;">
                    </a> *@
                </div>
                <a href="#booking-section" class="btn my-btn-primary" style="width:100%;margin:5px 0;font-size: 20px;">立即預訂</a>
                @*@if (Model.program.fStatus == "熱賣中")
                {
                    <div class="flame-icon"></div>

                    <p class="card-text" style="margin-top:5px;color:green">@Model.program.fStatus</p>
                }
                else if (Model.program.fStatus == "已截止")
                {
                    <p class="card-text" style="margin-top:5px;color:darkgray">@Model.program.fStatus</p>
                }
                else
                {
                    <p class="card-text" style="margin-top:5px;color:red">@Model.program.fStatus</p>
                }*@

            </div>
        </div>
    </div>

    <!--評價專區-->
    <div class="plan-container">
        <div class="be-comment-block">
            @if (Model.program.fComContent != null && Model.program.fComContent.Count > 0)
            {
                <div class="comments-title"><p>旅客評價<a href="#commentdetail" class="more-comment">更多評價<i class="fa fa-angle-right"></i></a></p></div>
                <div class="be-comment">
                    <div class="be-img-comment">
                        <img src="https://bootdey.com/img/Content/avatar/avatar1.png" alt="" class="be-ava-comment">
                    </div>
                    <div class="comment-header">
                     @*   @if (Model.program.fComMem[0] != null)
                        {
                            if (Model.program.fComMemGender[0] == "男")
                            {
                                <span class="be-comment-name">@Model.program.fComMem[0] 先生</span>
                            }
                            else if (Model.program.fComMemGender[0] == "女")
                            {
                                <span class="be-comment-name">@Model.program.fComMem[0] 小姐</span>
                            }
                        }*@
                        <span class="be-comment-time">@Model.program.fCommentDate[0]</span>
                    </div>

                    <div class="comments-title">
                        <span class="rating">
                            @for (int i = 1; i <= Model.program.fComScore[0]; i++)
                            {
                                <i>
                                    <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="#FFD306" class="bi bi-star-fill" viewBox="0 0 16 16">
                                        <path d="M3.612 15.443c-.386.198-.824-.149-.746-.592l.83-4.73L.173 6.765c-.329-.314-.158-.888.283-.95l4.898-.696L7.538.792c.197-.39.73-.39.927 0l2.184 4.327 4.898.696c.441.062.612.636.282.95l-3.522 3.356.83 4.73c.078.443-.36.79-.746.592L8 13.187l-4.389 2.256z" />
                                    </svg>
                                </i>
                            }
                            @for (int i = Model.program.fComScore[0] + 1; i <= 5; i++)
                            {
                                <i>
                                    <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="	#ADADAD" class="bi bi-star" viewBox="0 0 16 16">
                                        <path d="M2.866 14.85c-.078.444.36.791.746.593l4.39-2.256 4.389 2.256c.386.198.824-.149.746-.592l-.83-4.73 3.522-3.356c.33-.314.16-.888-.282-.95l-4.898-.696L8.465.792a.513.513 0 0 0-.927 0L5.354 5.12l-4.898.696c-.441.062-.612.636-.283.95l3.523 3.356-.83 4.73zm4.905-2.767-3.686 1.894.694-3.957a.565.565 0 0 0-.163-.505L1.71 6.745l4.052-.576a.525.525 0 0 0 .393-.288L8 2.223l1.847 3.658a.525.525 0 0 0 .393.288l4.052.575-2.906 2.77a.565.565 0 0 0-.163.506l.694 3.957-3.686-1.894a.503.503 0 0 0-.461 0z" />
                                    </svg>
                                </i>
                            }
                        </span>
                    </div>
                    <div class="be-comment-text">
                        <div class="be-comment-title">@Model.program.fComTitle[0]</div>
                        <p>
                           @* @Model.program.fComContent[0]*@
                        </p>
                       @* @if (Model.program.fCommentPhotoList != null)
                        {
                            foreach (var photoBytes in Model.program.fCommentPhotoList)
                            {
                                <img src="~/images/@photoBytes" alt="commentpic" class="comment-pic" id="myImg" />
                            }
                        }*@

                        <div id="myModal" class="modal">
                            <div class="close">&times;</div>
                            <img class="modal-content" id="img01">
                            <div id="caption"></div>
                        </div>
                    </div>
                </div>
            }
            else
            {
                <div class="comments-title"><p>旅客評價</p></div>
                <div class="be-comment">
                    <div class="be-img-comment">
                        <img src="https://bootdey.com/img/Content/avatar/avatar1.png" alt="" class="be-ava-comment">
                    </div>
                    <div class="comments-title">
                        <span class="rating">
                         @*   @for (int i = 0; i < 5; i++)
                            {
                                <i>
                                    <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="	#ADADAD" class="bi bi-star" viewBox="0 0 16 16">
                                        <path d="M2.866 14.85c-.078.444.36.791.746.593l4.39-2.256 4.389 2.256c.386.198.824-.149.746-.592l-.83-4.73 3.522-3.356c.33-.314.16-.888-.282-.95l-4.898-.696L8.465.792a.513.513 0 0 0-.927 0L5.354 5.12l-4.898.696c-.441.062-.612.636-.283.95l3.523 3.356-.83 4.73zm4.905-2.767-3.686 1.894.694-3.957a.565.565 0 0 0-.163-.505L1.71 6.745l4.052-.576a.525.525 0 0 0 .393-.288L8 2.223l1.847 3.658a.525.525 0 0 0 .393.288l4.052.575-2.906 2.77a.565.565 0 0 0-.163.506l.694 3.957-3.686-1.894a.503.503 0 0 0-.461 0z" />
                                    </svg>
                                </i>
                            }*@
                        </span>
                    </div>
                    <div class="be-comment-text">
                        <div class="be-comment-title">尚未有評論</div>
                    </div>
                </div>
            }
        </div>
    </div>


    <!--訂購專區(日曆、購買)-->
    <div class="plancal-container" id="booking-section" style="background-color:white">
        <div class="lendar-container">

            <div class="cal-container">
                <div class="calendar">
                    <button id="goToTodayBtn" class="btn btn-outline-dark">回到今天</button>
                    @*<input type="hidden" value="@Html.Raw(Json.Serialize(Model.program.fTripDate))" id="TripDate" />*@
                    <div class="month">
                        <i class="fa fa-angle-left prev-month-arrow" id="prevMonth">  </i>
                        <div class="date" id="currentMonthYear"></div>
                        <i class="fa fa-angle-right next-month-arrow" id="nextMonth">  </i>
                    </div>
                    <div class="weekdays">
                        <div>SUN</div>
                        <div>MON</div>
                        <div>TUE</div>
                        <div>WED</div>
                        <div>THU</div>
                        <div>FRI</div>
                        <div>SAT</div>
                    </div>
                    <div class="days" id="calendarDays"></div>
                </div>
            </div>

        </div>
        <div class="lendar-container">
            <div class="buy-content">
               @* @{
                    bool allElementsAreNull = true;

                    foreach (var discount in Model.program.fDiscountPlanPrice)
                    {
                        if (discount != null)
                        {
                            allElementsAreNull = false;
                            break;
                        }
                    }
                }*@

                
                    <span>@Model.product.PlanName</span>
                
              @*  else
                {
                    <span style="color: red;">【限時優惠中】</span>

                    <span style="color: black;">@Model.product.PlanName</span>
                }*@
                <br />
                <ul>
                    @foreach (var detail in Model.program.fPlanDescription)
                    {
                        if (!string.IsNullOrEmpty(detail))  //加個判斷避免顯示時多出空行
                        {
                            <li>@detail</li>
                        }
                    }
                </ul>
                <a href="#toggleButton" id="toggleButton" class="btn btn-outline-dark" style="margin-left:10px">
                    顯示所有可訂購日期
                    <i class="fa fa-angle-down"></i>
                </a>
            </div>
            <div class="buy-content" id="buy-content" style="display: none;">
                <ul id="ul1">
                </ul>
                <div class="col">
                    <ul class="list-inline">
                        <li class="list-inline-item text-right">
                            <label style="font-size:22px">購買數量：</label>
                            <input type="hidden" name="product-quanity" id="product-quanity" value="1">
                        </li>
                        <li class="list-inline-item"><button class="btn btn-outline-secondary btn-sm" id="btn-minus">－</button></li>
                        <li class="list-inline-item"><span id="var-value" class="ml-3 mr-3">1</span></li>
                        <li class="list-inline-item"><button class="btn btn-outline-secondary btn-sm" id="btn-plus">＋</button></li>
                    </ul>
                    <label style="font-size:22px" id="planprice">金額：</label>
                </div>
                <div class="m-3">
                    <input type="hidden" id="tripId" name="tripId" value="">
                    <input type="hidden" id="num" name="num" value="1">
                    <button type="button" id="addToCartBtn" class="btn btn-outline-dark btn-lg addToCartButton" data-tripid="" data-quantity="1">加入購物車</button>
                    <button type="button" id="addDirCartBtn" class="btn my-btn-primary btn-lg addDirCartButton" data-tripid="" data-quantity="1">立即購買</button>
                </div>
            </div>
        </div>
    </div>

    <div id="tripidContainer" class="detailplan-container" style="display: none;">
        <div>更多日期： </div>
        @*@for (int i = 0; i < Model.program.fTripDate.Count; i++)
        {*@
            

            <div class="card-container">
                <div class="card">
                    <div class="card-body">
                        <div class="row">
                            <div class="col-auto">
                               @* <label>@tripDate</label>*@
                            </div>
                            <div class="col-auto">
                                <label>@Model.product.PlanName</label>
                            </div>
                            <div class="col-auto">
                                @*@if (Model.program.fDiscountPlanPrice[i] != null)
                                {*@
                                   @* <label>金額：<del>@Model.program.fPlanPrice[i]</del> <span style="color:red">@(@Model.program.fPlanPrice[i] - @Model.program.fDiscountPlanPrice[i])</span></label>*@
                               @* }*@
                               @* else
                                {*@
                                    <label>金額：@*@Model.program.fPlanPrice[i]*@</label>
                                @*}*@
                            </div>
                            <div class="col-auto">
                                <ul class="list-inline">
                                    <li class="list-inline-item">
                                        <label>購買數量：</label>
                                    </li>
                                </ul>
                            </div>
                            <div class="col-auto">
                                <ul class="list-inline pb-3">
                                    <li class="list-inline-item"><button class="btn btn-outline-secondary btn-sm btn-minuss">－</button></li>
                                    <li class="list-inline-item quantity"> <span class="ml-3 mr-3 var-values">1</span></li>
                                    <li class="list-inline-item"><button class="btn btn-outline-secondary btn-sm btn-pluss">＋</button></li>
                                </ul>
                            </div>
                            <div class="col d-flex justify-content-between">
                                <div>
                                   
                                        
                                            <button type="button" class="btn btn-outline-dark addToCartButtonss" @*data-tripid="@Model.program.fTripId[i]"*@ data-quantity="1">加入購物車</button>
                                            <a asp-area="" asp-controller="Program" asp-action="AddDirectToCart" class="btn my-btn-primary addToCartButtonsss">立即購買</a>

                                        
                                    

                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
       @* }*@
    </div>
    <!--商品詳細說明-->
    <div class="plan-container p-4" id="section1">
        <div class="comments-title">
            <p>商品詳細說明</p>
        </div>
        <hr />
        <div class="comments-title" id="section2">
            <pre>@Model.product.Description</pre>
        </div>
    </div>

    <!--商品行程說明-->
    <div class="plan-container">
        <div class="naccs">
            <div class="comments-title">
                <p>行程說明</p>
            </div>
            <hr />
            <div class="grid">
                <div class="gc gc--1-of-3">
                    <div class="menu">
                        @for (int i = 0; i < Model.program.fTripDetails.Count; i++)
                        {
                            <div @(i == 0 ? "class=active" : "")><span class="light"></span><span>第 @(i + 1) 天</span></div>
                        }
                    </div>
                </div>
                <div class="gc gc--2-of-3">
                    <ul class="nacc">
                        @for (int i = 0; i < Model.program.fTripDetails.Count; i++)
                        {
                            <li @(i == 0 ? "class=active" : "")>
                                <div>
                                    <p>@Model.program.fTripDetails[i]</p>
                                    <div class="image-container">
                                       @* <img src="~/images/@Model.program.fTTripPhotoList[i]" alt="第 @(i+1) 天 Image" class="img-thumbnail w-300 h-200" />*@
                                        <img src="data:image/jpeg;base64,@Model.program.fTTripPhotoList[i]" alt="Uploaded Image" />
                                    </div>
                                </div>
                            </li>
                        }
                    </ul>
                </div>
            </div>
        </div>
    </div>

    <!--Googlemap-->
    <div class="plan-container" id="section3">
        <div class="comments-title">
            <p>體驗地點</p>
            <pre>地址：@Model.product.Address</pre>
        </div>
        <hr />
        <div id="map" style="height:500px;width:509px;margin:5px auto;"></div>
    </div>

    <!--更多評論區-->
    

</div>




@section Scripts{


    <script>

        // Load Google Maps API
        const googleMapsScript = document.createElement("script");
        googleMapsScript.src = "https://maps.googleapis.com/maps/api/js?key=AIzaSyBbcL3X1HudqP8Ej1YhYQlzE9Oy3frc-rc&callback=initMap";
        document.head.appendChild(googleMapsScript);

        const addressData = @Html.Raw(Json.Serialize(Model.product.Address));
        console.log(addressData)

        let map;
        //Google Maps API
        function initMap() {
            const geocoder = new google.maps.Geocoder();
            geocoder.geocode({ address: addressData }, (results, status) => {
                if (status === google.maps.GeocoderStatus.OK) {
                    const latitude = results[0].geometry.location.lat();
                    const longitude = results[0].geometry.location.lng();
                    const Latlng = new google.maps.LatLng(latitude, longitude);

                    map = new google.maps.Map(document.getElementById("map"), {
                        center: Latlng,
                        zoom: 12,
                    });

                    new google.maps.Marker({
                        position: Latlng,
                        map: map,
                    });
                } else {
                    console.error(status);
                }
            });
        }




        //click all TripID
        const toggleButton = document.getElementById('toggleButton');
        const tripidContainer = document.getElementById('tripidContainer');

        toggleButton.addEventListener('click', function () {
            if (tripidContainer.style.display === 'none') {
                tripidContainer.style.display = 'flex';
            } else {
                tripidContainer.style.display = 'none';
            }
        });

        //click calendar 的 數量加減
        const minusButton = document.getElementById('btn-minus');
        const plusButton = document.getElementById('btn-plus');
        const valueSpan = document.getElementById('var-value');
        const minPeopleSpan = document.getElementById('minPeople');
        const priceSpan = document.getElementById('price');

        let value = 1;

        // plusButton.addEventListener('click', function () {
        //     value++;
        //     valueSpan.textContent = value;
        // });

        minusButton.addEventListener('click', function () {
            if (value > 1) {
                value--;
                valueSpan.textContent = value;
            }
        });




        //Calendar
        const prevMonthButton = document.getElementById('prevMonth');
        const nextMonthButton = document.getElementById('nextMonth');
        const currentMonthYear = document.getElementById('currentMonthYear');
        const calendarDays = document.getElementById('calendarDays');
        const goToTodayBtn = document.getElementById('goToTodayBtn');
        goToTodayBtn.addEventListener('click', goToToday);

        //const availableDates = @Html.Raw(Json.Serialize(Model.program.fTripDate));
        //const price = @Html.Raw(Json.Serialize(Model.program.fPlanPrice));
        //const discountprice = @Html.Raw(Json.Serialize(Model.program.fDiscountPlanPrice));
        //const discountdate = @Html.Raw(Json.Serialize(Model.program.fDiscountPriceDate));
        // console.log(availableDates, price, discountprice, discountdate);
        // const availableDates = ["2023-08-16", "2023-08-20", "2023-08-25"];
        // Event listeners for navigation buttons
        prevMonthButton.addEventListener('click', showPreviousMonth);
        nextMonthButton.addEventListener('click', showNextMonth);

        // Initial display of current month
        let currentDate = new Date();
        showCalendar(currentDate);

        // Function to display the calendar for a given month
        function showCalendar(date) {
            let year = date.getFullYear();
            let month = date.getMonth();
            let firstDay = new Date(year, month, 1);
            let lastDay = new Date(year, month + 1, 0);

            // Update the month and year in the calendar header
            currentMonthYear.textContent = `${getMonthName(month)} ${year}`;

            // Clear the previous calendar days
            calendarDays.innerHTML = '';

            // Display the days of the current month
            for (let i = 0; i < firstDay.getDay(); i++) {
                // Display previous month's days
                let prevDate = new Date(year, month, -firstDay.getDay() + i + 1);
                let dayElement = createDayElement(prevDate, 'prev-date');
                calendarDays.appendChild(dayElement);
            }

            for (let i = 1; i <= lastDay.getDate(); i++) {
                // Display current month's days
                let currentDate = new Date(year, month, i);
                let dayElement = createDayElement(currentDate, 'day');
                calendarDays.appendChild(dayElement);
            }

            for (let i = lastDay.getDay() + 1; i <= 6; i++) {
                // Display next month's days
                let nextDate = new Date(year, month + 1, i - lastDay.getDay());
                let dayElement = createDayElement(nextDate, 'next-date');
                calendarDays.appendChild(dayElement);
            }


        }

        function formatDate(date) {
            const year = date.getFullYear();
            const month = String(date.getMonth() + 1).padStart(2, '0');
            const day = String(date.getDate()).padStart(2, '0');
            return `${year}-${month}-${day}`;
        }


        // Function to show the previous month in the calendar
        function showPreviousMonth() {
            const now = new Date();
            const currentYear = currentDate.getFullYear();
            const currentMonth = currentDate.getMonth();

            if (currentYear === now.getFullYear() && currentMonth === now.getMonth()) {
                return;
            }
            currentDate.setMonth(currentDate.getMonth() - 1);
            showCalendar(currentDate);
        }

        // Function to show the next month in the calendar
        function showNextMonth() {
            console.log('Before:', currentDate);
            currentDate.setDate(1);
            currentDate.setMonth(currentDate.getMonth() + 1);
            console.log('After:', currentDate);
            showCalendar(currentDate);
        }

        // Function to go to today's date
        function goToToday() {
            currentDate = new Date();
            showCalendar(currentDate);
        }

        function createDayElement(date, className) {
            let dayElement = document.createElement('div');
            dayElement.className = 'day';
            dayElement.classList.add(className);

            let content = document.createElement('div');
            content.className = 'content';
            let daycontent = document.createElement('p');
            daycontent.textContent = date.getDate();
            content.appendChild(daycontent);

            // if (availableDates.includes(formatDate(date))) {
            //     dayElement.classList.add('available-date');
            //     const formattedDate = formatDate(date);
            //     const priceIndex = availableDates.indexOf(formattedDate);
            //     if (priceIndex !== -1) {
            //         let priceSpan = document.createElement('p');
            //         priceSpan.className = 'price';

            //         if (discountprice[priceIndex] !== null && discountprice[priceIndex] !== undefined &&
            //             discountdate[priceIndex] !== null && discountdate[priceIndex] !== undefined) {
            //             // Show original price with strike-through
            //             let originalPriceSpan = document.createElement('span');
            //             originalPriceSpan.className = 'original-price text-gray-600';
            //             originalPriceSpan.textContent = '$' + price[priceIndex];
            //             originalPriceSpan.style.textDecoration = 'line-through';
            //             priceSpan.appendChild(originalPriceSpan);

            //             // Show discounted price
            //             let discountedPriceSpan = document.createElement('span');
            //             discountedPriceSpan.className = 'discounted-price';
            //             discountedPriceSpan.textContent = ' $' + (price[priceIndex] - discountprice[priceIndex]);
            //             priceSpan.appendChild(discountedPriceSpan);

            //             // priceSpan.textContent = '$' + price[priceIndex];
            //             // content.appendChild(priceSpan);
            //         }
            //         else {
            //             priceSpan.textContent = '$' + price[priceIndex];
            //         }
            //         content.appendChild(priceSpan);
            //     }
            // }

            if (date < new Date()) {
                dayElement.classList.add('expired-date');
            }

            dayElement.appendChild(content);

            return dayElement;
        }



        // Helper function to get month name from month index (0 - 11)
        function getMonthName(monthIndex) {
            const monthNames = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];
            return monthNames[monthIndex];
        }

        const selectedDateClass = 'select-date';
        let selectedDateElement = null;

        let formattedClickedDate;
        let trip;

        //點擊日曆的日期
        //calendarDays.addEventListener('click', function (event) {
        //    const target = event.target;
        //    if (target.classList.contains('day')) {
        //        const clickedDate = new Date(currentDate.getFullYear(), currentDate.getMonth(), parseInt(target.textContent));
        //        formattedClickedDate = formatDate(clickedDate);
        //        //const productId = @Model.product.ProductId;

        //        if (availableDates.includes(formattedClickedDate)) {
        //            if (selectedDateElement) {
        //                selectedDateElement.classList.remove(selectedDateClass);
        //                const priceElement = selectedDateElement.querySelector('.price');
        //                if (priceElement) {
        //                    priceElement.classList.remove(selectedDateClass);
        //                }
        //            }

        //            if (selectedDateElement !== target) {
        //                selectedDateElement = target;
        //                target.classList.add(selectedDateClass);
        //                const priceElement = target.querySelector('.price');
        //                if (priceElement) {
        //                    priceElement.classList.add(selectedDateClass);
        //                }

        //                loadmaxmin(formattedClickedDate, productId);
        //                document.getElementById('buy-content').style.display = 'block';
        //            } else {
        //                selectedDateElement = null;
        //                document.getElementById('buy-content').style.display = 'none';
        //            }
        //        }
        //    }
        //});

        let maxnum;

        async function loadmaxmin(formattedClickedDate, productId) {
            const response = await fetch(`@Url.Content("~/program/MaxNum")?id=${productId}&selectedDate=${formattedClickedDate}`)
            const data = await response.json();
            console.log('Received data:', data);
            const ulElement = document.getElementById('ul1');
            const planPriceElement = document.getElementById('planprice');
            maxnum = data.maxnum;

            plusButton.addEventListener('click', function () {
                if (value < data.maxnum) { // 檢查 value 是否小於可訂購數
                    value++;
                    valueSpan.textContent = value;
                }
            });

            if (ulElement) {
                let html = '';

                if (data.maxnum > 9) {
                    html += `<li>可訂購數：${data.maxnum}</li>`;
                }
                else if (data.maxnum < 10) {
                    html += `<li style="color:red;">可訂購數：${data.maxnum}  （即將額滿）</li>`;
                }

                if (data.minnum > 0) {
                    html += `<li>最少成行人數：${data.minnum}人</li>`;
                }

                ulElement.innerHTML = html;
            }
            if (planPriceElement && data.price) {
                planPriceElement.textContent = `金額：${data.price}`;
            }
            if (data.discount != null) {
                let priceElement = document.createElement('span');
                priceElement.textContent = data.price;
                priceElement.style.textDecoration = 'line-through';

                let discountedPriceElement = document.createElement('span');
                discountedPriceElement.textContent = ` ${data.price - data.discount}`;
                discountedPriceElement.style.color = 'red';

                planPriceElement.innerHTML = `金額：<del>${priceElement.innerHTML}</del> ${discountedPriceElement.outerHTML}`;
            }
            trip = data.tripId;

            const quantity = document.getElementById('var-value').textContent;

            const numInput = document.getElementById('num');
            numInput.value = quantity;

            const addToCartBtn = document.getElementById('addToCartBtn');
            const addDirCartBtn = document.getElementById('addDirCartBtn');


            addToCartBtn.setAttribute('data-tripid', trip);
            addDirCartBtn.setAttribute('data-tripid', trip);


            addToCartBtn.addEventListener('click', addToCart);
            addDirCartBtn.addEventListener('click', addDirectToCart);
        }

        function addToCart() {
            const tripId = this.getAttribute('data-tripid');
            const quantity = document.getElementById('var-value').textContent;

            console.log(quantity, tripId)

            fetch(`/Program/AddToCart?num=${quantity}&tripId=${tripId}`, {
                method: 'POST',
            }).then(response => response.text())
                .then(data => {
                    if (data === "請登入會員") {
                        swal('請登入會員', '', 'warning');
                    } else {
                        swal('已加入購物車!', '', 'success');
                        $.get('@Url.Content("/CartApi/GetCartCount")', function (data) {
                            $('#CartBagde').addClass(" badge rounded-pill bg-warning text-dark");
                            $('#CartBagde').text(data);
                        })
                    }
                });
        }

        function addDirectToCart() {
            const tripId = this.getAttribute('data-tripid');
            const quantity = document.getElementById('var-value').textContent;

            console.log(quantity, tripId)

            fetch(`/Program/AddToCart?num=${quantity}&tripId=${tripId}`, {
                method: 'POST',
            }).then(response => response.text())
                .then(data => {
                    if (data === "請登入會員") {
                        swal('請登入會員', '', 'warning');
                    } else {
                        var orderDetailId = parseInt(data);
                        console.log(orderDetailId);
                        console.log(data);

                        //window.orderDetailId = orderDetailId;
                        //window.location.href = `/Cart/ShoppingCart`;
                        window.location.href = `/Cart/ConfirmOrder/${orderDetailId}`;

                        //window.location.href = `/Cart/ShoppingCart`;
                    }
                });
        }


        //商品每天行程JS
        $(document).on("click", ".naccs .menu div", function () {
            var numberIndex = $(this).index();

            if (!$(this).is("active")) {
                $(".naccs .menu div").removeClass("active");
                $(".naccs ul li").removeClass("active");

                $(this).addClass("active");
                $(".naccs ul").find("li:eq(" + numberIndex + ")").addClass("active");

                var listItemHeight = $(".naccs ul")
                    .find("li:eq(" + numberIndex + ")")
                    .innerHeight();
                $(".naccs ul").height(listItemHeight + "px");
            }
        });



        //commentpic
        // var image = document.getElementById('myImg');
        // image.addEventListener('mouseover', function () {
        //     image.style.cursor = 'url("/icons/search_zoom.png"), auto';
        // });

        // image.addEventListener('mouseout', function () {
        //     image.style.cursor = 'auto';
        // });

        //顯示所有的加購物車
        // const addToCartButtons = document.querySelectorAll('.addToCartButton');
        // function handleAddToCartClick(event) {
        //     event.preventDefault();
        //     const num = parseInt(event.target.getAttribute('data-num'));
        //     const tripId = parseInt(event.target.getAttribute('data-tripId'));

        //     fetch(`/Program/AddToCart?num=${num}&tripId=${tripId}`, {
        //         method: 'POST',
        //     })
        //         .then(response => response.text())
        //         .then(data => {
        //             if (data === "請登入會員") {
        //                 swal('請登入會員', '', 'warning');
        //             } else {
        //                 swal('已加入購物車!', '', 'success');
        //             }
        //         });
        // }

        // addToCartButtons.forEach(button => {
        //     button.addEventListener('click', handleAddToCartClick);
        // });

        // var modal = document.getElementById("myModal");

        // Get the image and insert it inside the modal - use its "alt" text as a caption
        // var img = document.getElementById("myImg");
        // var modalImg = document.getElementById("img01");
        // var captionText = document.getElementById("caption");
        // img.onclick = function () {
        //     modal.style.display = "block";
        //     modalImg.src = this.src;
        // }

        // Get the <span> element that closes the modal
        //var span = document.getElementsByClassName("close")[0];

        // When the user clicks on <span> (x), close the modal
        // span.onclick = function () {
        //     modal.style.display = "none";
        // }

        //回到最上面按鈕
        $(function () {
            $('#BackTop').click(function () {
                $('html,body').animate({ scrollTop: 0 }, 222);
            });
            $(window).scroll(function () {
                if ($(this).scrollTop() > 300) {
                    $('#BackTop').fadeIn(222);
                } else {
                    $('#BackTop').stop().fadeOut(222);
                }
            }).scroll();
        });

        //顯示所有的數量加減
        $(document).ready(function () {
            $('.btn-minuss').click(function () {
                var valueSpan = $(this).closest('.row').find('.var-values');
                var value = parseInt(valueSpan.text());

                if (value > 1) {
                    value--;
                    valueSpan.text(value);
                }
            });

            $('.btn-pluss').click(function () {
                var valueSpan = $(this).closest('.row').find('.var-values');
                var value = parseInt(valueSpan.text());

                value++;
                valueSpan.text(value);
            });
        });

        //顯示所有的加購物車
        $(document).ready(function () {
            $('.addToCartButtonss').click(function () {
                var tripId = $(this).data('tripid');
                var quantity = $(this).closest('.card-container').find('.quantity .var-values').text();

                var formData = new FormData();
                formData.append('num', quantity);
                formData.append('tripId', tripId);

                fetch('/Program/AddToCart', {
                    method: 'POST',
                    body: formData
                })
                    .then(response => response.text())
                    .then(data => {
                        if (data === "請登入會員") {
                            swal('請登入會員', '', 'warning');
                        } else {
                            swal('已加入購物車!', '', 'success');
                            $.get('@Url.Content("/CartApi/GetCartCount")', function (data) {
                                $('#CartBagde').addClass(" badge rounded-pill bg-warning text-dark");
                                $('#CartBagde').text(data);
                            })
                        }
                    });
            });
        });


        //顯示所有的立即購買
        $(document).ready(function () {
            $('.addToCartButtonsss').click(function () {
                event.preventDefault();
                var tripId = $(this).data('tripid');
                var quantity = $(this).closest('.card-container').find('.var-values').text();

                var formData = new FormData();
                formData.append('num', quantity);
                formData.append('tripId', tripId);

                fetch('/Program/AddDirectToCart', {
                    method: 'POST',
                    body: formData
                })
                    .then(response => response.text())
                    .then(data => {
                        if (data === "請登入會員") {
                            swal('請登入會員', '', 'warning');
                        } else {
                            var orderDetailId = parseInt(data);
                            console.log(orderDetailId);
                            console.log(data);

                            //window.orderDetailId = orderDetailId;
                            //window.location.href = `/Cart/ShoppingCart`;
                            window.location.href = `/Cart/ConfirmOrder/${orderDetailId}`;
                        }
                    });
            });
        });



    </script>

    <!--產品頁面下滑的navbar-->
    <script>
        $(document).ready(function () {
            var windowHeight = $(window).height();
            var scrollThreshold = 1200;
            var navbar = $('.navbar.navbar-expand-md');
            var navbarHeight = navbar.outerHeight();
            var navbarPosition = 90;

            navbar.css({
                'top': -navbarHeight,
                'transform': 'translateY(' + navbarPosition + 'px)'
            });

            $(window).scroll(function () {
                var scrollPosition = $(this).scrollTop();

                if (scrollPosition > scrollThreshold) {
                    navbar.css({
                        'top': navbarPosition,
                        'transform': 'translateY(0)'
                    });
                } else {
                    navbar.css({
                        'top': -navbarHeight,
                        'transform': 'translateY(' + navbarPosition + 'px)'
                    });
                }

                if (scrollPosition > scrollThreshold) {
                    navbar.show();
                } else {
                    navbar.hide();
                }
            });
        });

    </script>


    }

@section Styles{
    <style>
        .card:hover {
            color: #155074;
            background-color: #F0F0F0;
        }


        /* 48px */
        .toTop-arrow {
            width: 3rem;
            height: 3rem;
            padding: 0;
            margin: 0;
            border: 0;
            border-radius: 33%;
            opacity: 0.6;
            background: #155074;
            cursor: pointer;
            position: fixed;
            right: 3rem;
            bottom: 1rem;
            display: none;
        }

            .toTop-arrow::before, .toTop-arrow::after {
                width: 25px;
                height: 6px;
                border-radius: 3px;
                background: #f90;
                position: absolute;
                content: "";
            }

            .toTop-arrow::before {
                transform: rotate(-45deg) translate(0, -50%);
                left: 0.42rem;
            }

            .toTop-arrow::after {
                transform: rotate(45deg) translate(0, -50%);
                right: 0.42rem;
            }

            .toTop-arrow:focus {
                outline: none;
            }

    </style>
    }

